########################################################################## 20200130

Began benchmarking => downloaded 1mbn.pdb (myoglobin)
Visualized in PyMol and made a vis file


########################################################################## 20200129

catalase for heme? since less solvent-exposed
this program only works for solvent-exposed pockets

Cloned updated code and did the following:
1. changed setup.py to update surf path for my computer
2. changed gen-pockets path for fpocket
3. chagned 2 paths in compare.py (1 for vasp; 1 for surf)
4. line 42 of compare.py needs to make first argument of open("","") and f string (just add an 'f')
5. created 4 empty directories in find-similar-pockets: PDB, VASP, winners, rosetta
6. in search-for-pockets change ./gen-pockets to python3 gen-pockets.py (Matt changed bash script to python script)
7. in search-for-pockets change all python to python3 unless specified otherwise

Preparing input pocket:
1. download desired .pdb and place in "initial_structures"
2. run fpocket on the .pdb (need to optimize flags for each input pocket)
	for 1m1n.pdb used -i 80 (-i = minimum spheres per pocket)
	open 1m1n_out.pdb and find which pocket is the desired one (say pocket 1 for 1m1n)
3. now run setup.py (can feed in setup.py itself or type inputs in as one goes)
	here did 1m1n, 1, 30, 20, 2
4. edit gen-pockets.py to ensure correct number of alpha spheres (use same fpocket parameters as in step 2)
	Also (if desired) edit pocket-finder.py to change max size of pockets
5. run search-for-pockets
	had errors in get-score-file.py which I fixed:
		changed line 55 to:
			 55   with open(f'../VASP/pockets/{p[0]}.vol.txt', 'r') as f: # open corresponding pocket file
		changed line 115:
			115     out=f"{a:<6} {p:<7}{vline:{12}.{8}}{v:{12}.{8}} {d:{9}.{7}} {c:{6}.{3}}    {b}\n"


########################################################################### Initial meeting with Matt

change all python to python3 (unless specified)


fpocket on original pdb

setup.py
creates conformations of target (1m1n.pdb) pocket
need to already have run fpocket and decided what pocket you want (the one with FeMoCo i.e.)

pick-random-pdbs.py
takes 100 random lines from sublists/pdb_lists.txt
downloads the pdb => 



search-for-pockets
	so-called master command file

prepare-pdbs.py
runs a script called clean_pdb.py which comes from Rosetta (tools/protein_tools/scripts)

gen-pockets
runs fpocket on all our pdbs from rcbi
output = pdb with pockets + original atoms

pocket-finder.py
cuts out pockets of appropriate size and puts them in new pdb file
minimum cutoff already applied in fpocket here apply maximum cutoff

align-structures.py
centers and aligns the pockets from pocket-finder.py

compare.py
VASP on each conformation of each aligned structure from align-structures.py
outputs is intersect volume and the original pocket volume

get-score-file.py
generates score file and appends to master score file

rosetta-prep.py
goes through score file and generates pose file (for Rosetta) from pdb file with AA residues (from fpocket) for any pockets that have 1+ hits & >=0.7% intersect volume

move-good-pdbs.py
housekeeping


.tcl
vmd scripts
measure-sasa.tcl
maybe align instead of to longest distance to cavity opening
