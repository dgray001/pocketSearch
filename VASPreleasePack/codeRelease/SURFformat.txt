==============================================================================
This document describes file formats used as input for the following 
publication:

VASP-E: Specificity Annotation with a Volumetric Analysis of
Electrostatic Isopotentials

by Brian Y. Chen, 
Dept. Computer Science and Engineering, Lehigh University

Please direct any questions to <chen@cse.lehigh.edu>
==============================================================================

The .SURF file format 

.SURF files use a closed triangular mesh that defines the boundary of a solid 
three dimensional region in space.  It has two major sections, a "Geometry"
section, which specifies the spatial position of every triangle corner, and a
"Topology" section, which comes after the Geometry section and specifies which
corners are connected into triangles.

Any line that begins with "#" or is purely whitespace is ignored.

The first critical line is "GEOMETRY: X", where X is replaced with an
integer.  X indicates the number of points that will be described in this
section, which corresponds to the number of lines the parser expects to read.
"GEOMETRY:" must appear in all caps, with the colon.

The "GEOMETRY:" line is followed by X lines each composed of six space
delimited double values.  Each double value can be of arbitrary length up to
15 characters, but cannot include scientific notation.  A negative sign "-"
denotes negative values, but plus signs "+" should not be used to denote 
positive values.

If we break each line into the double values <x> <y> <z> <nx> <ny> <nz>,
x, y, and z refer to the spatial position of the point.  nx, ny, and nz
are a normalized normal vector that indicates the orientation of the surface.
The normal values are crucial for defining the interior and exterior of 
the surface, because an "inside-out" surface can be used by VASP.  VASP will
attempt to "fix" a logically inconsistent surface, where the normals point
to opposite sides of the surface, but this process is not guaranteed to work
and may result in a crash.  Normal vectors are also used for rendering the
surface in SURFview, which expects averaged normals to achieve gouraud
shading.

An example of the beginning of a .SURF file is shown below:


#######################################################################
#######################################################################
## Surface File Generated by Brian Chen and modified Trollbase Lib   ##
#######################################################################
#######################################################################

#Original PDB file: none (Surface computations)
########################################
###  ##   ##  ## ### #   #   #   ## # ##
## #### ### ## #  #  # #### ## ## # # ##
## #  #  ## ## # # # #  ### ##   ### ###
## ## # ### ## # ### # #### ## # ### ###
###  ##   ##  ## ### #   ## ## ## ## ###
########################################
GEOMETRY: 582
-1.386953 -1.738180 -0.454751 -0.784100 -0.583554 -0.184518
-1.411268 -1.738180 -0.316033 -0.838747 -0.530263 -0.090077
-1.386953 -1.774070 -0.316033 -0.767911 -0.628103 -0.076594
-1.386953 -1.790451 0.183967 -0.742332 -0.652950 0.071021
-1.425972 -1.738180 0.183967 -0.853597 -0.503151 0.064928
-1.386953 -1.738180 0.468742 -0.781234 -0.569836 0.146838
-1.386953 -1.349950 1.183967 -0.757064 -0.511467 0.392023
-1.454679 -1.238180 1.183967 -0.848549 -0.367411 0.362931
-1.386953 -1.238180 1.323642 -0.771003 -0.402636 0.470807
-1.441224 1.261820 1.183967 -0.822816 0.436257 0.349175
...


After the GEOMETRY: section, additional comment lines can be placed in
the .SURF file.  The next critical line is "TOPOLOGY: Y", where Y is 
replaced with an integer.  Y represents the number of triangles in the
surface, and also tells the parser how many lines to expect after the
"TOPOLOGY:" line.

Each line following the "TOPOLOGY:" line is made up of three integers.
Each integer refers to a point in the "GEOMTRY:" section: 0 refers to
the first point in the "GEOMETRY:" section, which was on the first
line.  1 refers to the second point in the "GEOMETRY:" section, which
was described on the second line, etc.  While points may be not 
referred to in the "TOPOLOGY:" section, referring to a point greater 
than X-1, where X is the number of points in the geometry section, 
will result in a segmentation fault.

The three integers in each "TOPOLOGY:" line must be specified according 
to the right hand rule.  That is, for three points A, B, C, the cross
product AB x AC should result in a vector that points outwards from the
surface, and *not* inwards from the surface.  This is one means by which
the software is checking the file for consistency: it is checking if the
triangle normals, as described by the right hand rule, agree with the
point normals in orientation relative to the surface.

An example of the second half of the .SURF file format, starting with 
the last two lines of the "GEOMETRY:" section, is shown below:


-0.386953 0.261820 2.633357 -0.480437 0.087020 0.866331
-0.386953 2.639137 0.183967 -0.496860 0.857970 0.069468
########################################
##   ##  ##   ###  ## ####  ###  ## # ##
### ## ## # ## # ## # ### ## # #### # ##
### ## ## #   ## ## # ### ## # #  ## ###
### ## ## # #### ## # ### ## # ## ## ###
### ###  ## #####  ##   ##  ###  ### ###
########################################
TOPOLOGY: 1160
2 1 0
5 4 3
8 7 6
11 9 10
12 13 14
17 15 16
20 19 18
22 19 20
19 22 21
23 21 22
26 25 24
...
...


Following the "TOPOLOGY:" section, an optional "COLORS:"  section may
occur.  These can be used by the writer of the file to create colors that
are painted onto the surface generated, though the code provided only uses
that functionality sometimes to indicate the sign of electrostatic 
isopotential surfaces (red for negative isopotentials, blue for positive).

The "COLORS:" section begins with comments again, but the word "COLORS:"
is not followed by a number, because the number of lines after this line
must be identical to the number of points in the "GEOMETRY:" section. Each
line that follows the line with "COLORS:" contains three decimal values 
that range from 0.0 to 1.00, and describe RGB colors to be applied to 
individual corners in the surface.  These colors are interpolated over the
triangles they are associated with, to create smoothly transitioning
colors, even though usually the colors are all red or all blue.  The exerpt
below demonstrates an example that includes the last two lines of the 
"TOPOLOGY:" section:


69692 69694 69695
69693 69695 69694

########################################
###  ##  ## ####  ##  ###   ############
## ### ## # ### ## # # # ###############
## ### ## # ### ## #  ###  #############
## ### ## # ### ## # # #### ############
###  ##  ##   ##  ## # #   #############
########################################
COLORS: 
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000
1.000000 0.000000 0.000000

Note that the whitespace after the "TOPOLOGY:" section is not an error, because
whitespace and lines starting with "#" are skipped.

Colors are not necessary, and the whole section can be ignored.  In this case
surfView will render the surfaces with default colors.











